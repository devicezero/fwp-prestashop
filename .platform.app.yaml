# .platform.app.yaml

# The name of this application, which must be unique within a project.
name: 'app'

# The type key specifies the language and version for your application.
type: 'php:7.0'

# On PHP, there are multiple build flavors available. Pretty much everyone
# except Drupal 7 users will want the composer flavor.
build:
  flavor: composer

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'mysqldb:mysql'

# The hooks that will be triggered when the package is deployed.
hooks:
    # Build hooks can modify the application files on disk but not access any services like databases.
    # build: |
    # Deploy hooks can access services but the file system is now read-only.
    deploy: |
        set -e
        rsync -a init/modules/* modules/
        rsync -a init/img/* img/
        rsync -a init/config/* config/
        rsync -a init/translations/* translations/
        rsync -a init/resources-translations/* app/Resources/translations/
        rsync -a init/app-config/* app/config/
        rsync -a init/themes/* themes/
        rsync -a init/admin-fwp/import/* admin-fwp/import/
        rsync -a init/mails/* mails/
        rm -rf var/cache/*
        if [ ! -f var/writeable/installed.lock ]; then
            wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O /tmp/jq
            chmod +x /tmp/jq
            cd install-fwp && php index_cli.php --db_server=database.internal --db_name=main --db_user=user --email=$ADMIN_EMAIL --password=$ADMIN_PASSWORD --domain=$(echo $PLATFORM_ROUTES | base64 -d | /tmp/jq 'keys[0]'|sed 's|https\?://||'|sed 's|/||'|sed 's|\"||g')
            mysql -h database.internal -u user -e "UPDATE ps_configuration SET value = 1 WHERE name ='PS_SSL_ENABLED' OR name='PS_SSL_ENABLED_EVERYWHERE';" main
            cd && touch var/writeable/installed.lock
        fi;

# The size of the persistent disk of the application (in MB).
disk: 2048

# The 'mounts' describe writable, persistent filesystem mounts in the application.
# The keys are directory paths relative to the application root. The values are a
# mount definition. In this case, `web-files` is just a unique name for the mount.
mounts:
    'admin-fwp/import':
        source: local
        source_path: 'admin-fwp-import'
    'mails':
        source: local
        source_path: 'mails'
    'modules':
        source: local
        source_path: 'modules'
    'translations':
        source: local
        source_path: 'translations'
    'app/Resources/translations':
        source: local
        source_path: 'resources-translations'
    'config':
        source: local
        source_path: 'config'
    'app/config':
        source: local
        source_path: 'app-config'
    'img':
        source: local
        source_path: 'img'
    'upload':
        source: local
        source_path: 'upload'
    'download':
        source: local
        source_path: 'download'
    'var/cache':
        source: local
        source_path: 'var-cache'
    'var/logs':
        source: local
        source_path: 'var-logs'
    'var/writeable':
        source: local
        source_path: 'var-writeable'
    'themes':
        source: local
        source_path: 'themes'

# The configuration of the application when it is exposed to the web.
web:
    locations:
        '/':
            # The public directory of the application relative to its root.
            root: ''
            # The front-controller script which determines where to send
            # non-static requests.
            passthru: '/index.php'
        '/admin-fwp':
            # The public directory of the application relative to its root.
            root: 'admin-fwp'
            # The front-controller script which determines where to send
            # non-static requests.
            passthru: '/admin-fwp/index.php'
